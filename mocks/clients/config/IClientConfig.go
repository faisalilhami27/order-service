// Code generated by mockery v2.36.0. DO NOT EDIT.

package mocks

import (
	gorequest "github.com/parnurzeal/gorequest"
	mock "github.com/stretchr/testify/mock"
)

// IClientConfig is an autogenerated mock type for the IClientConfig type
type IClientConfig struct {
	mock.Mock
}

// BaseURL provides a mock function with given fields:
func (_m *IClientConfig) BaseURL() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Client provides a mock function with given fields:
func (_m *IClientConfig) Client() *gorequest.SuperAgent {
	ret := _m.Called()

	var r0 *gorequest.SuperAgent
	if rf, ok := ret.Get(0).(func() *gorequest.SuperAgent); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*gorequest.SuperAgent)
		}
	}

	return r0
}

// SecretKey provides a mock function with given fields:
func (_m *IClientConfig) SecretKey() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// NewIClientConfig creates a new instance of IClientConfig. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIClientConfig(t interface {
	mock.TestingT
	Cleanup(func())
}) *IClientConfig {
	mock := &IClientConfig{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
