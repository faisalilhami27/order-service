// Code generated by mockery v2.36.0. DO NOT EDIT.

package mocks

import (
	clients "order-service/clients/payment"

	mock "github.com/stretchr/testify/mock"

	rbac "order-service/clients/rbac"
)

// IClientRegistry is an autogenerated mock type for the IClientRegistry type
type IClientRegistry struct {
	mock.Mock
}

// GetPayment provides a mock function with given fields:
func (_m *IClientRegistry) GetPayment() clients.IPaymentClient {
	ret := _m.Called()

	var r0 clients.IPaymentClient
	if rf, ok := ret.Get(0).(func() clients.IPaymentClient); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(clients.IPaymentClient)
		}
	}

	return r0
}

// GetRBAC provides a mock function with given fields:
func (_m *IClientRegistry) GetRBAC() rbac.IRbacClient {
	ret := _m.Called()

	var r0 rbac.IRbacClient
	if rf, ok := ret.Get(0).(func() rbac.IRbacClient); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(rbac.IRbacClient)
		}
	}

	return r0
}

// NewIClientRegistry creates a new instance of IClientRegistry. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIClientRegistry(t interface {
	mock.TestingT
	Cleanup(func())
}) *IClientRegistry {
	mock := &IClientRegistry{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
