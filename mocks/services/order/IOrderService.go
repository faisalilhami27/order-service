// Code generated by mockery v2.20.2. DO NOT EDIT.

package mocks

import (
	context "context"
	order "order-service/domain/dto/order"

	mock "github.com/stretchr/testify/mock"
)

// IOrderService is an autogenerated mock type for the IOrderService type
type IOrderService struct {
	mock.Mock
}

// CreateOrder provides a mock function with given fields: _a0, _a1
func (_m *IOrderService) CreateOrder(_a0 context.Context, _a1 *order.OrderRequest) (*order.OrderResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *order.OrderResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *order.OrderRequest) (*order.OrderResponse, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *order.OrderRequest) *order.OrderResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*order.OrderResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *order.OrderRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewIOrderService interface {
	mock.TestingT
	Cleanup(func())
}

// NewIOrderService creates a new instance of IOrderService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIOrderService(t mockConstructorTestingTNewIOrderService) *IOrderService {
	mock := &IOrderService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
