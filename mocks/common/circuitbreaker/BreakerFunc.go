// Code generated by mockery v2.36.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// BreakerFunc is an autogenerated mock type for the BreakerFunc type
type BreakerFunc struct {
	mock.Mock
}

// Execute provides a mock function with given fields:
func (_m *BreakerFunc) Execute() (interface{}, error) {
	ret := _m.Called()

	var r0 interface{}
	var r1 error
	if rf, ok := ret.Get(0).(func() (interface{}, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() interface{}); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewBreakerFunc creates a new instance of BreakerFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewBreakerFunc(t interface {
	mock.TestingT
	Cleanup(func())
}) *BreakerFunc {
	mock := &BreakerFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
